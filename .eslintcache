[{"D:\\Weather_API\\React_Weather_API\\src\\index.js":"1","D:\\Weather_API\\React_Weather_API\\src\\App.js":"2","D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js":"3","D:\\Weather_API\\React_Weather_API\\src\\Components\\NavBar\\NavBar.js":"4","D:\\Weather_API\\React_Weather_API\\src\\Components\\About\\About.js":"5","D:\\Weather_API\\React_Weather_API\\src\\Components\\Main\\Main.js":"6","D:\\Weather_API\\React_Weather_API\\src\\Redux\\store.js":"7","D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js":"8","D:\\Weather_API\\React_Weather_API\\src\\api\\api.js":"9","D:\\Weather_API\\React_Weather_API\\src\\Components\\Spinner\\Spinner.js":"10","D:\\Weather_API\\React_Weather_API\\src\\Redux\\geolocation_reducer.js":"11","D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js":"12","D:\\Weather_API\\React_Weather_API\\src\\Components\\GeolocationWeather\\GeolocationWeather.js":"13","D:\\Weather_API\\React_Weather_API\\src\\Components\\Home\\HomeContainer.js":"14","D:\\Weather_API\\React_Weather_API\\src\\Components\\SearchWeather\\SearchWeather.js":"15","D:\\Weather_API\\React_Weather_API\\src\\Components\\Day\\Day.js":"16","D:\\Weather_API\\React_Weather_API\\src\\Components\\Alert.js":"17","D:\\Weather_API\\React_Weather_API\\src\\Components\\Footer\\Footer.js":"18","D:\\Weather_API\\React_Weather_API\\src\\Components\\SearchInput.js":"19","D:\\Weather_API\\React_Weather_API\\src\\Components\\Card\\Card.js":"20"},{"size":511,"mtime":1610225130754,"results":"21","hashOfConfig":"22"},{"size":333,"mtime":1610225207662,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":1181,"mtime":1610193429582,"results":"25","hashOfConfig":"22"},{"size":326,"mtime":1610151975957,"results":"26","hashOfConfig":"22"},{"size":910,"mtime":1610193444212,"results":"27","hashOfConfig":"22"},{"size":544,"mtime":1610019692451,"results":"28","hashOfConfig":"22"},{"size":3719,"mtime":1610211329627,"results":"29","hashOfConfig":"22"},{"size":537,"mtime":1610212142125,"results":"30","hashOfConfig":"22"},{"size":318,"mtime":1609962461086,"results":"31","hashOfConfig":"22"},{"size":1682,"mtime":1610201400667,"results":"32","hashOfConfig":"22"},{"size":1363,"mtime":1610206955920,"results":"33","hashOfConfig":"22"},{"size":1398,"mtime":1610227287547,"results":"34","hashOfConfig":"22"},{"size":3513,"mtime":1610218502376,"results":"35","hashOfConfig":"22"},{"size":1410,"mtime":1610210734487,"results":"36","hashOfConfig":"22"},{"size":765,"mtime":1610211042644,"results":"37","hashOfConfig":"22"},{"size":538,"mtime":1610206531809,"results":"38","hashOfConfig":"22"},{"size":259,"mtime":1610152352834,"results":"39","hashOfConfig":"22"},{"size":1716,"mtime":1610223849352,"results":"40","hashOfConfig":"22"},{"size":1074,"mtime":1610222466210,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1go6nsg",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"48"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Weather_API\\React_Weather_API\\src\\index.js",[],"D:\\Weather_API\\React_Weather_API\\src\\App.js",[],"D:\\Weather_API\\React_Weather_API\\src\\reportWebVitals.js",[],["91","92"],"D:\\Weather_API\\React_Weather_API\\src\\Components\\NavBar\\NavBar.js",["93"],"import React from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CssBaseline, Slide, AppBar, Toolbar, useScrollTrigger } from '@material-ui/core';\r\n\r\nconst NavBar = (props) => {\r\n    const { window } = props;\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n            <Slide appear={false} direction=\"down\" in={!trigger}>\r\n              <AppBar>\r\n                  <Toolbar>\r\n                    <NavLink to=\"/React_Weather_API\" activeClassName={classes.active} className={classes.navLink}>Home</NavLink>\r\n                    <NavLink to=\"/About\" activeClassName={classes.active} className={classes.navLink}>About</NavLink>\r\n                    <NavLink to=\"/React_Weather_API\" className={`${classes.navLink} ${classes.logo}`}><img src={`http://openweathermap.org/img/wn/10d.png`}/></NavLink>\r\n                  </Toolbar>\r\n              </AppBar>\r\n            </Slide>\r\n        <Toolbar />\r\n      </>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\Weather_API\\React_Weather_API\\src\\Components\\About\\About.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Components\\Main\\Main.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\store.js",["94"],"import React from 'react';\r\nimport weather_reducer from './weather_reducer';\r\nimport geolocation_reducer from './geolocation_reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport errorMess_reducer from './errorMess_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    geolocation: geolocation_reducer,\r\n    weather: weather_reducer,\r\n    errorMess: errorMess_reducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nwindow.store = store;","D:\\Weather_API\\React_Weather_API\\src\\Redux\\weather_reducer.js",["95"],"import React from 'react';\r\nimport { weatherFetch } from '../api/api';\r\nimport { setIsLoading2_ActionCreater, setErrorMess_ActionCreater, setErrorMessSearch_ActionCreater } from './errorMess_reducer';\r\n\r\nconst SET_WEATHER = 'SET_WEATHER';\r\nconst SET_WEATHER_SEARCH = 'SET_WEATHER_SEARCH';\r\nconst SET_WEATHER_CITY = 'SET_WEATHER_CITY';\r\nconst SET_WEATHER_COUNTRY = 'SET_WEATHER_COUNTRY';\r\n\r\nconst initialState = {\r\n    weather: {},\r\n    weatherSearch: [],\r\n    city: null,\r\n    country: null,\r\n};\r\n\r\nconst weather_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER:\r\n            return {\r\n                ...state, weather: action.payload\r\n            };\r\n        case SET_WEATHER_SEARCH:\r\n            return {\r\n                ...state, weatherSearch: action.payload\r\n            };\r\n        case SET_WEATHER_CITY:\r\n            return {\r\n                ...state, city: action.payload\r\n            };\r\n        case SET_WEATHER_COUNTRY:\r\n            return {\r\n                ...state, country: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default weather_reducer;\r\n\r\nexport const setWeather_ActionCreater = (payload) => ({type: SET_WEATHER, payload});\r\nexport const setWeatherSearch_ActionCreater = (payload) => ({type: SET_WEATHER_SEARCH, payload});\r\nexport const setWeatherSearchCity_ActionCreater = (payload) => ({type: SET_WEATHER_CITY, payload});\r\nexport const setWeatherSearchCountry_ActionCreater = (payload) => ({type: SET_WEATHER_COUNTRY, payload});\r\n\r\n\r\nexport const setWeatherThunk = (city) => async (dispatch) => {\r\n\r\n    const cityURL = city.replace(/\\s/g, '-'); \r\n\r\n    dispatch(setIsLoading2_ActionCreater());\r\n\r\n    try {\r\n        const response = await weatherFetch.geolocation(cityURL);\r\n        \r\n        if (response.data.cod === 200) {\r\n           dispatch(setWeather_ActionCreater(response.data));\r\n           dispatch(setErrorMess_ActionCreater(null));\r\n        } else {\r\n           dispatch(setWeather_ActionCreater({}));\r\n           dispatch(setErrorMess_ActionCreater(response.data.message));\r\n        }\r\n        \r\n    } catch(error) {\r\n        dispatch(setWeather_ActionCreater({}));\r\n        dispatch(setErrorMess_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading2_ActionCreater());\r\n}\r\n\r\n\r\n\r\nexport const setWeatherSearchThunk = (city) => async (dispatch) => {\r\n\r\n    const cityURL = city.replace(/\\s/g, '-'); \r\n\r\n    dispatch(setIsLoading2_ActionCreater());\r\n\r\n    try {\r\n        const response = await weatherFetch.search(cityURL);\r\n      \r\n        if (response.data.cod === '200') {\r\n\r\n            const list = response.data.list;\r\n            const startNewDay = list.findIndex(el => el.dt_txt.split(' ')[1] === '00:00:00');\r\n            const arr = [];\r\n\r\n            if (startNewDay > 0) {\r\n                arr.push(list.splice(0, startNewDay))\r\n            }\r\n\r\n            while(list.length > 0) {\r\n              arr.push(list.splice(0, 8))\r\n            }\r\n\r\n           dispatch(setWeatherSearch_ActionCreater(arr));\r\n           dispatch(setWeatherSearchCity_ActionCreater(response.data.city.name));\r\n           dispatch(setWeatherSearchCountry_ActionCreater(response.data.city.country));\r\n           dispatch(setErrorMessSearch_ActionCreater(null));\r\n\r\n        } else {\r\n\r\n           dispatch(setWeatherSearch_ActionCreater([]));\r\n           dispatch(setErrorMessSearch_ActionCreater(response.data.message));\r\n\r\n        }\r\n        \r\n    } catch(error) {\r\n        dispatch(setWeatherSearch_ActionCreater([]));\r\n        dispatch(setErrorMessSearch_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading2_ActionCreater());\r\n}\r\n","D:\\Weather_API\\React_Weather_API\\src\\api\\api.js",["96"],"import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n \r\nconst instance = axios.create({\r\n  baseURL: 'https://api.openweathermap.org/data/2.5/',\r\n});\r\n\r\n\r\nexport const geolocationFetch = () => {\r\n  return axios.get(`https://ipapi.co/json`)\r\n}\r\n\r\n\r\nexport const weatherFetch = {\r\n  geolocation(city) {\r\n    return instance.get(`weather?q=${city}&units=metric&appid=${apiKey}`)\r\n  },\r\n  search(city) {\r\n    return instance.get(`forecast?q=${city}&units=metric&appid=${apiKey}`)\r\n  },\r\n}\r\n","D:\\Weather_API\\React_Weather_API\\src\\Components\\Spinner\\Spinner.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Redux\\geolocation_reducer.js",["97"],"import React from 'react';\r\nimport { geolocationFetch } from '../api/api';\r\nimport { setIsLoading_ActionCreater, setErrorMess_ActionCreater } from './errorMess_reducer';\r\nimport { setWeatherThunk } from './weather_reducer';\r\n\r\nconst SET_CITY = 'SET_CITY';\r\nconst SET_COUNTRY = 'SET_COUNTRY';\r\n\r\nconst initialState = {\r\n    city: \"\",\r\n    country: \"\",\r\n};\r\n\r\nconst geolocation_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CITY:\r\n            return {\r\n                ...state, city: action.payload\r\n            };\r\n        case SET_COUNTRY:\r\n            return {\r\n                ...state, country: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default geolocation_reducer;\r\n\r\n\r\nexport const setCity_ActionCreater = (payload) => ({type: SET_CITY, payload});\r\nexport const setCountry_ActionCreater = (payload) => ({type: SET_COUNTRY, payload});\r\n\r\n\r\nexport const setGeolocationThunk = () => async (dispatch) => {\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n\r\n    try {\r\n\r\n        const response = await geolocationFetch();\r\n\r\n        if (response.status === 200) {\r\n\r\n           dispatch(setWeatherThunk(response.data.city));\r\n           dispatch(setCity_ActionCreater(response.data.city));\r\n           dispatch(setCountry_ActionCreater(response.data.country_name));\r\n           dispatch(setErrorMess_ActionCreater(null));\r\n\r\n        } else {\r\n           dispatch(setErrorMess_ActionCreater(response.data.message));\r\n        }\r\n\r\n    } catch(error) {\r\n        dispatch(setErrorMess_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n}","D:\\Weather_API\\React_Weather_API\\src\\Redux\\errorMess_reducer.js",["98"],"import React from 'react';\r\n\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\nconst SET_IS_LOADING2 = 'SET_IS_LOADING2';\r\nconst SET_ERROR_MESS = 'SET_ERROR_MESS';\r\nconst SET_ERROR_MESS_SEARCH = 'SET_ERROR_MESS_SEARCH';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    isLoading2: false,\r\n    error: null,\r\n    errorSearch: null,\r\n};\r\n\r\nconst errorMess_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state, isLoading: !state.isLoading\r\n            };\r\n        case SET_IS_LOADING2:\r\n            return {\r\n                ...state, isLoading2: !state.isLoading2\r\n            };\r\n        case SET_ERROR_MESS:\r\n            return {\r\n                ...state, error: action.payload\r\n            };\r\n        case SET_ERROR_MESS_SEARCH:\r\n            return {\r\n                ...state, errorSearch: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorMess_reducer;\r\n\r\nexport const setIsLoading_ActionCreater = () => ({type: SET_IS_LOADING});\r\nexport const setIsLoading2_ActionCreater = () => ({type: SET_IS_LOADING2});\r\nexport const setErrorMess_ActionCreater = (payload) => ({type: SET_ERROR_MESS, payload});\r\nexport const setErrorMessSearch_ActionCreater = (payload) => ({type: SET_ERROR_MESS_SEARCH, payload});\r\n","D:\\Weather_API\\React_Weather_API\\src\\Components\\GeolocationWeather\\GeolocationWeather.js",["99"],"import React from 'react'\r\nimport classes from './GeolocationWeather.module.css';\r\n \r\nexport const GeolocationWeather = React.memo(({ city, country, weather, dates }) => {\r\n    return (\r\n        <>\r\n            <div className={classes.title}>\r\n                <h1>{city}, {country.toUpperCase()}</h1>\r\n                <h2>{dates}</h2>\r\n            </div>\r\n            \r\n            {JSON.stringify(weather) !== '{}' && (<div className={classes.wrapper}>\r\n\r\n                <div className={classes.left}>\r\n                    <div className={classes.left_box}>\r\n                        <img className={classes.img} src={`https://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`}/>\r\n                        <div className={classes.temp}>{Math.trunc(weather.main.temp)}°C</div>\r\n                        <div className={classes.description}>{weather.weather[0].description}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.right}>\r\n                    <div>Atmospheric pressure: <span>{weather.main.pressure}hPa</span></div>\r\n                    <div>Humidity: <span>{weather.main.humidity}%</span></div>\r\n                    <div>Wind speed: <span>{weather.wind.speed}m/s</span></div>\r\n                    <div>Cloudiness: <span>{weather.clouds.all}%</span></div>\r\n                </div>\r\n\r\n            </div>)}\r\n        </>\r\n    )\r\n});","D:\\Weather_API\\React_Weather_API\\src\\Components\\Home\\HomeContainer.js",["100","101"],"D:\\Weather_API\\React_Weather_API\\src\\Components\\SearchWeather\\SearchWeather.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Components\\Day\\Day.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Components\\Alert.js",["102"],"import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n      width: '100%',\r\n      '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n      },\r\n  },\r\n}));\r\n\r\nconst Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const AlertApp = ({mess}) => {\r\n  const classes = useStyles();\r\n  return <Alert severity=\"error\">Your {mess} in weather database</Alert>\r\n}","D:\\Weather_API\\React_Weather_API\\src\\Components\\Footer\\Footer.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Components\\SearchInput.js",[],"D:\\Weather_API\\React_Weather_API\\src\\Components\\Card\\Card.js",["103"],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":19,"column":103,"nodeType":"110","endLine":19,"endColumn":158},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"111","severity":1,"message":"112","line":1,"column":8,"nodeType":"113","messageId":"114","endLine":1,"endColumn":13},{"ruleId":"108","severity":1,"message":"109","line":16,"column":25,"nodeType":"110","endLine":16,"endColumn":131},{"ruleId":"111","severity":1,"message":"115","line":1,"column":37,"nodeType":"113","messageId":"114","endLine":1,"endColumn":44},{"ruleId":"116","severity":1,"message":"117","line":38,"column":8,"nodeType":"118","endLine":38,"endColumn":10,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":19,"column":9,"nodeType":"113","messageId":"114","endLine":19,"endColumn":16},{"ruleId":"108","severity":1,"message":"109","line":8,"column":13,"nodeType":"110","endLine":8,"endColumn":124},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'city.length' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["123"],"'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"124","fix":"125"},"Update the dependencies array to be: [city.length, dispatch]",{"range":"126","text":"127"},[1616,1618],"[city.length, dispatch]"]