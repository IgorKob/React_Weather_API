{"version":3,"sources":["Components/SearchWeather/SearchWeather.module.css","Components/GeolocationWeather/GeolocationWeather.module.css","Components/Spinner/Spinner.js","Components/GeolocationWeather/GeolocationWeather.js","Components/Day/Day.js","Components/SearchWeather/SearchWeather.js","Components/Alert.js","Components/SearchInput.js","Components/Home/HomeContainer.js"],"names":["module","exports","Spinner","className","GeolocationWeather","React","memo","city","country","weather","dates","classes","title","toUpperCase","JSON","stringify","wrapper","left","left_box","img","src","icon","temp","main","description","right","pressure","humidity","wind","speed","clouds","all","Day","searchArr","newDays","id","useParams","num","indexOf","days","map","el2","index2","dayWrapper","dayTitle","dt_txt","padding","padding2","String","SearchWeather","searchCity","searchCountry","startDay","date","getDay","finishDay","length","push","slice","el","index","to","activeClassName","active2","navLink2","day","exact","path","Alert","props","elevation","variant","CssTextField","withStyles","root","color","borderBottomColor","border","borderRadius","borderColor","TextField","useStyles","makeStyles","theme","display","flexWrap","justifyContent","margin","spacing","width","SearchInput","onChange","onClick","value","noValidate","label","event","onKeyPress","key","preventDefault","marginTop","HomeContainer","useState","search","setSearch","useSelector","state","geolocation","weatherSearch","isLoading","errorMess","error_mess","error","errorSearch","dispatch","useDispatch","useEffect","Date","getDate","getMonth","severity","e","target","setWeatherSearchThunk"],"mappings":"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","file":"static/js/3.f86f4f9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SearchWeather_wrapper__2hxdS\",\"title\":\"SearchWeather_title__xrtm_\",\"padding\":\"SearchWeather_padding__3UcKZ\",\"days\":\"SearchWeather_days__1Tw83\",\"navLink2\":\"SearchWeather_navLink2__z_1uw\",\"dayWrapper\":\"SearchWeather_dayWrapper__3AOu-\",\"padding2\":\"SearchWeather_padding2__2NSjJ\",\"dayTitle\":\"SearchWeather_dayTitle__2u9IB\",\"active2\":\"SearchWeather_active2__1T0NE\",\"day\":\"SearchWeather_day__tMaVY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"GeolocationWeather_title__uEqoL\",\"wrapper\":\"GeolocationWeather_wrapper__wzFCP\",\"left\":\"GeolocationWeather_left__3XLwZ\",\"left_box\":\"GeolocationWeather_left_box__aV8XE\",\"img\":\"GeolocationWeather_img__33RHQ\",\"temp\":\"GeolocationWeather_temp__38xRu\",\"description\":\"GeolocationWeather_description__1xgkW\",\"right\":\"GeolocationWeather_right__Qsd_D\"};","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"wrapp\"><div className=\"lds-spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div></div>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './GeolocationWeather.module.css';\r\n \r\nexport const GeolocationWeather = React.memo(({ city, country, weather, dates }) => {\r\n    return (\r\n        <>\r\n            <div className={classes.title}>\r\n                <h1>{city}, {country.toUpperCase()}</h1>\r\n                <h2>{dates}</h2>\r\n            </div>\r\n            \r\n            {JSON.stringify(weather) !== '{}' && (<div className={classes.wrapper}>\r\n\r\n                <div className={classes.left}>\r\n                    <div className={classes.left_box}>\r\n                        <img className={classes.img} src={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@4x.png`}/>\r\n                        <div className={classes.temp}>{weather.main.temp}°C</div>\r\n                        <div className={classes.description}>{weather.weather[0].description}</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className={classes.right}>\r\n                    <div>Atmospheric pressure: <span>{weather.main.pressure}hPa</span></div>\r\n                    <div>Humidity: <span>{weather.main.humidity}%</span></div>\r\n                    <div>Wind speed: <span>{weather.wind.speed}m/s</span></div>\r\n                    <div>Cloudiness: <span>{weather.clouds.all}%</span></div>\r\n                </div>\r\n\r\n            </div>)}\r\n        </>\r\n    )\r\n});","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport classes from './../SearchWeather/SearchWeather.module.css';\r\n\r\nconst Day = React.memo(({searchArr, newDays }) => {\r\n\r\n    const { id } = useParams();\r\n    const num =  newDays[0].indexOf(id)\r\n\r\n    return (\r\n        <div className={classes.days}>\r\n            {searchArr[num].map((el2, index2) => (<div key={String(index2)} className={classes.dayWrapper}>\r\n                    <div className={classes.dayTitle}>{el2.dt_txt}</div>\r\n                    <div className={classes.dayTitle}>{el2.main.temp}°C</div>\r\n                    <img src={`http://openweathermap.org/img/wn/${el2.weather[0].icon}@4x.png`}/>\r\n                    <div className={classes.padding}>{el2.weather[0].description}</div>\r\n                    <div className={classes.padding}>Atmospheric pressure: {el2.main.pressure}hPa</div>\r\n                    <div className={classes.padding}>Humidity: {el2.main.humidity}%</div>\r\n                    <div className={classes.padding}>Wind speed: {el2.wind.speed}m/s</div>\r\n                    <div className={classes.padding2}>Cloudiness: {el2.clouds.all}%</div>\r\n            </div>))}\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Day;","import React from 'react'\r\nimport classes from './SearchWeather.module.css' \r\nimport { NavLink, Route, Switch } from 'react-router-dom';\r\nimport Day from './../Day/Day';\r\n\r\nexport const SearchWeather = React.memo(({ searchArr, searchCity, searchCountry, days, date }) => {\r\n\r\n    const startDay = date.getDay();\r\n    const finishDay = startDay + searchArr.length;\r\n\r\n    // створюю масив з днями з початком від сьогоднішнього дня\r\n    const newDays = []\r\n    newDays.push(days.slice(startDay, finishDay))\r\n\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n\r\n            <h2 className={classes.title}>{searchCity}, {searchCountry}</h2>\r\n            \r\n            <div className={classes.days}>\r\n                {searchArr.map((el, index) => (<NavLink key={String(index)} to={`/Home/${newDays[0][index]}`} activeClassName={classes.active2} className={classes.navLink2}>\r\n                    <div className={classes.dayTitle}>{newDays[0][index]}</div>\r\n                    <div className={classes.dayTitle}>{el[0].main.temp}°C</div>\r\n                    <img src={`http://openweathermap.org/img/wn/${el[0].weather[0].icon}@4x.png`}/>\r\n                    <div className={classes.padding}>Humidity: {el[0].main.humidity}%</div>\r\n                    <div className={classes.padding}>Cloudiness: {el[0].clouds.all}%</div>\r\n                    <div className={classes.padding2}>Wind speed: {el[0].wind.speed}m/s</div>\r\n                </NavLink>))}\r\n            </div>\r\n\r\n            <div className={classes.day}>\r\n                <Switch>\r\n                    <Route exact path={`/Home/:id`}>\r\n                        <Day searchArr={searchArr} newDays={newDays}/>\r\n                    </Route>\r\n                </Switch>\r\n            </div>\r\n                \r\n        </div>\r\n    )\r\n});","import React from 'react';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\n\r\nexport const Alert = (props) => {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}","import React from 'react';\r\nimport {\r\n  withStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst CssTextField = withStyles({\r\n  root: {\r\n    '& label.Mui-focused': {\r\n      color: 'green',\r\n    },\r\n    '& .MuiInput-underline:after': {\r\n      borderBottomColor: 'green',\r\n    },\r\n    '& .MuiOutlinedInput-root': {\r\n      '& fieldset': {\r\n        border: '3px solid red',\r\n        borderRadius: '15px',\r\n      },\r\n      '&:hover fieldset': {\r\n        borderColor: 'yellow',\r\n      },\r\n      '&.Mui-focused fieldset': {\r\n        borderColor: 'green',\r\n      },\r\n    },\r\n  },\r\n})(TextField);\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n    width: '320px',\r\n  },\r\n}));\r\n\r\n\r\nconst SearchInput = React.memo(({ onChange, onClick, value }) => {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <form className={classes.root} noValidate>\r\n    <CssTextField\r\n        className={classes.margin}\r\n        label=\"Search weather...\"\r\n        variant=\"outlined\"\r\n        id=\"custom-css-outlined-input\"\r\n        onChange={(event) =>\r\n            onChange(event)\r\n        }\r\n        onKeyPress={(event) => {\r\n            // if (event.ctrlKey && event.key === 'Enter') {\r\n            if (event.key === \"Enter\") {\r\n                event.preventDefault();\r\n                onClick();\r\n            }\r\n        }}\r\n        value={value}\r\n      />\r\n    </form>\r\n  );\r\n});\r\n\r\nexport default SearchInput;","import React, {useState, useEffect, useMemo} from 'react'\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport { setGeolocationThunk } from '../../Redux/geolocation_reducer';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport { GeolocationWeather } from '../GeolocationWeather/GeolocationWeather';\r\nimport { setWeatherSearchThunk } from './../../Redux/weather_reducer';\r\nimport { SearchWeather } from '../SearchWeather/SearchWeather';\r\nimport { Alert } from './../Alert';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport SearchInput from './../SearchInput';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        '& > * + *': {\r\n        marginTop: theme.spacing(2),\r\n        },\r\n    },\r\n}));\r\n\r\n\r\nexport default function HomeContainer() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [search, setSearch] = useState('');\r\n\r\n    const city = useSelector(state => state.geolocation.city);\r\n    const country = useSelector(state => state.geolocation.country);\r\n\r\n    const weather = useSelector(state => state.weather.weather);\r\n\r\n    const searchArr = useSelector(state => state.weather.weatherSearch);\r\n    const searchCity = useSelector(state => state.weather.city);\r\n    const searchCountry = useSelector(state => state.weather.country);\r\n\r\n    const isLoading = useSelector(state => state.errorMess.isLoading)\r\n    const error_mess = useSelector(state => state.errorMess.error);\r\n    const errorSearch = useSelector(state => state.errorMess.errorSearch);\r\n\r\n    \r\n    const dispatch = useDispatch();\r\n         \r\n    useEffect(() => {\r\n        if (city.length === 0) {\r\n            // dispatch(setGeolocationThunk());\r\n        }\r\n    }, [])\r\n\r\n\r\n    // const handleClick2 = React.useMemo(() => dispatch(setWeatherThunk(geolocation.city), [asd]));\r\n\r\n    const handleChange = (e) => {\r\n        setSearch(e.target.value);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        dispatch(setWeatherSearchThunk(search));\r\n    }\r\n\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday', 'Monday', 'Tuesday', 'Wednesday'];\r\n    const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Nocvember', 'December'];\r\n    const date = new Date();\r\n    const dates = `${days[date.getDay()]}, ${date.getDate()} ${months[date.getMonth()]}`;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n          \r\n            {isLoading ? <Spinner /> : (<>\r\n\r\n                {error_mess && (<Alert severity=\"error\">{error_mess}</Alert> )}\r\n                  \r\n                {city.length !== 0 && <GeolocationWeather city={city}\r\n                    country={country}\r\n                    weather={weather}\r\n                    dates={dates}        \r\n                />}\r\n\r\n                <hr></hr>\r\n                \r\n                <SearchInput onChange={handleChange} \r\n                    onClick={handleClick}\r\n                    value={search} \r\n                />\r\n\r\n                {errorSearch && (<h3><Alert severity=\"error\">{errorSearch}</Alert></h3>)}\r\n\r\n                {searchArr.length !== 0  && <SearchWeather searchArr={searchArr} \r\n                    searchCity={searchCity}\r\n                    searchCountry={searchCountry}\r\n                    days={days}\r\n                    date={date}\r\n                />}\r\n\r\n            </>)}            \r\n        </div>\r\n    )\r\n}\r\n"],"sourceRoot":""}