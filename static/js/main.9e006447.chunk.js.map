{"version":3,"sources":["Components/NavBar/NavBar.js","Components/Main/Main.js","Components/Footer/Footer.js","App.js","reportWebVitals.js","Redux/store.js","index.js","Components/NavBar/NavBar.module.css","api/api.js","Redux/weather_reducer.js","Redux/geolocation_reducer.js","Components/Footer/Footer.module.css","Redux/errorMess_reducer.js"],"names":["NavBar","props","window","trigger","useScrollTrigger","target","undefined","CssBaseline","Slide","appear","direction","in","AppBar","Toolbar","to","activeClassName","classes","active","className","navLink","logo","src","HomeContainer","React","lazy","About","Main","Container","Box","my","Suspense","fallback","LinearProgress","path","exact","Footer","wrapper","Date","getFullYear","App","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","geolocation","geolocation_reducer","weather","weather_reducer","errorMess","errorMess_reducer","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","module","exports","apiKey","process","geolocationFetch","axios","get","weatherFetch","city","search","SET_WEATHER","SET_WEATHER_SEARCH","SET_WEATHER_CITY","SET_WEATHER_COUNTRY","initialState","weatherSearch","country","state","action","type","payload","setWeather_ActionCreater","setWeatherSearch_ActionCreater","setWeatherSearchCountry_ActionCreater","setWeatherThunk","dispatch","a","cityURL","replace","setIsLoading_ActionCreater","response","data","cod","setErrorMess_ActionCreater","message","setWeatherSearchThunk","list","startNewDay","findIndex","el","dt_txt","split","arr","push","splice","length","name","setErrorMessSearch_ActionCreater","SET_CITY","SET_COUNTRY","setCountry_ActionCreater","setGeolocationThunk","status","SET_IS_LOADING","SET_ERROR_MESS","SET_ERROR_MESS_SEARCH","isLoading","error","errorSearch"],"mappings":"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","file":"static/js/main.9e006447.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './NavBar.module.css';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { CssBaseline, Slide, AppBar, Toolbar, useScrollTrigger } from '@material-ui/core';\r\n\r\nconst NavBar = (props) => {\r\n    const { window } = props;\r\n    const trigger = useScrollTrigger({ target: window ? window() : undefined });\r\n\r\n    return (\r\n      <>\r\n        <CssBaseline />\r\n            <Slide appear={false} direction=\"down\" in={!trigger}>\r\n              <AppBar>\r\n                  <Toolbar>\r\n                    <NavLink to=\"/Home\" activeClassName={classes.active} className={classes.navLink}>Home</NavLink>\r\n                    <NavLink to=\"/About\" activeClassName={classes.active} className={classes.navLink}>About</NavLink>\r\n                    <NavLink to=\"/\" className={`${classes.navLink} ${classes.logo}`}><img src={`http://openweathermap.org/img/wn/10d.png`}/></NavLink>\r\n                  </Toolbar>\r\n              </AppBar>\r\n            </Slide>\r\n        <Toolbar />\r\n      </>\r\n    )\r\n}\r\n\r\nNavBar.propTypes = {\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react'\r\nimport { Container, Box, LinearProgress } from '@material-ui/core';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nconst HomeContainer = React.lazy(() => import('./../Home/HomeContainer'));\r\nconst About = React.lazy(() => import('./../About/About'));\r\n\r\nexport default function Main() {\r\n    return (\r\n      <Container>\r\n        <Box my={2}>\r\n            <React.Suspense fallback={<div><LinearProgress /></div>}>\r\n              <Switch>\r\n                <Route path=\"/Home\">\r\n                  <HomeContainer />\r\n                </Route>\r\n                <Route exact path=\"/About\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"*\">\r\n                  <Redirect to=\"/Home\" />\r\n                </Route>\r\n              </Switch>\r\n            </React.Suspense>\r\n        </Box>\r\n      </Container>\r\n    )\r\n}","import React from 'react'\r\nimport classes from './Footer.module.css'\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <div>Copyright &copy; {new Date().getFullYear()}</div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport NavBar from './Components/NavBar/NavBar';\nimport Main from './Components/Main/Main';\nimport Footer from './Components/Footer/Footer';\n \nfunction App(props) {\n  return (\n    <React.Fragment>\n\n      <NavBar />\n\n      <Main />\n\n      <Footer />\n      \n    </React.Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport weather_reducer from './weather_reducer';\r\nimport geolocation_reducer from './geolocation_reducer';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport errorMess_reducer from './errorMess_reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    geolocation: geolocation_reducer,\r\n    weather: weather_reducer,\r\n    errorMess: errorMess_reducer,\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"NavBar_navLink__3S7wn\",\"active\":\"NavBar_active__OV_2w\",\"logo\":\"NavBar_logo__3EX69\"};","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst apiKey = process.env.REACT_APP_API_KEY;\r\n \r\nexport const geolocationFetch = () => {\r\n  return axios.get('http://ip-api.com/json/?fields=status,message,country,regionName,city,lat,lon')\r\n}\r\n\r\nexport const weatherFetch = {\r\n    geolocation(city) {\r\n      return axios.get(`http://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`)\r\n    },\r\n    search(city) {\r\n      return axios.get(`http://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&appid=${apiKey}`)\r\n    },\r\n}\r\n\r\n","import React from 'react';\r\nimport { weatherFetch } from '../api/api';\r\nimport { setIsLoading_ActionCreater, setErrorMess_ActionCreater, setErrorMessSearch_ActionCreater } from './errorMess_reducer';\r\n\r\nconst SET_WEATHER = 'SET_WEATHER';\r\nconst SET_WEATHER_SEARCH = 'SET_WEATHER_SEARCH';\r\nconst SET_WEATHER_CITY = 'SET_WEATHER_CITY';\r\nconst SET_WEATHER_COUNTRY = 'SET_WEATHER_COUNTRY';\r\n\r\nconst initialState = {\r\n    weather: {},\r\n    weatherSearch: [],\r\n    city: null,\r\n    country: null,\r\n};\r\n\r\nconst weather_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_WEATHER:\r\n            return {\r\n                ...state, weather: action.payload\r\n            };\r\n        case SET_WEATHER_SEARCH:\r\n            return {\r\n                ...state, weatherSearch: action.payload\r\n            };\r\n        case SET_WEATHER_CITY:\r\n            return {\r\n                ...state, city: action.payload\r\n            };\r\n        case SET_WEATHER_COUNTRY:\r\n            return {\r\n                ...state, country: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default weather_reducer;\r\n\r\nexport const setWeather_ActionCreater = (payload) => ({type: SET_WEATHER, payload});\r\nexport const setWeatherSearch_ActionCreater = (payload) => ({type: SET_WEATHER_SEARCH, payload});\r\nexport const setWeatherSearchCity_ActionCreater = (payload) => ({type: SET_WEATHER_CITY, payload});\r\nexport const setWeatherSearchCountry_ActionCreater = (payload) => ({type: SET_WEATHER_COUNTRY, payload});\r\n\r\n\r\nexport const setWeatherThunk = (city) => async (dispatch) => {\r\n\r\n    const city2 = (city === 'Novyy Rozdil') ? 'Lviv' : city;\r\n    const cityURL = city2.replace(/\\s/g, '-'); \r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n\r\n    try {\r\n        const response = await weatherFetch.geolocation(cityURL);\r\n        \r\n        if (response.data.cod === 200) {\r\n           dispatch(setWeather_ActionCreater(response.data));\r\n           dispatch(setErrorMess_ActionCreater(null));\r\n        } else {\r\n           dispatch(setWeather_ActionCreater({}));\r\n           dispatch(setErrorMess_ActionCreater(response.data.message));\r\n        }\r\n        \r\n    } catch(error) {\r\n        dispatch(setWeather_ActionCreater({}));\r\n        dispatch(setErrorMess_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n}\r\n\r\n// search\r\nexport const setWeatherSearchThunk = (city) => async (dispatch) => {\r\n\r\n    const cityURL = city.replace(/\\s/g, '-'); \r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n\r\n    try {\r\n        const response = await weatherFetch.search(cityURL);\r\n      \r\n        if (response.data.cod === '200') {\r\n\r\n            const list = response.data.list;\r\n            const startNewDay = list.findIndex(el => el.dt_txt.split(' ')[1] === '00:00:00');\r\n            const arr = [];\r\n\r\n            if (startNewDay > 0) {\r\n                arr.push(list.splice(0, startNewDay))\r\n            }\r\n\r\n            while(list.length > 0) {\r\n              arr.push(list.splice(0, 8))\r\n            }\r\n\r\n           dispatch(setWeatherSearch_ActionCreater(arr));\r\n           dispatch(setWeatherSearchCity_ActionCreater(response.data.city.name));\r\n           dispatch(setWeatherSearchCountry_ActionCreater(response.data.city.country));\r\n           dispatch(setErrorMessSearch_ActionCreater(null));\r\n\r\n        } else {\r\n\r\n           dispatch(setWeatherSearch_ActionCreater([]));\r\n           dispatch(setErrorMessSearch_ActionCreater(response.data.message));\r\n\r\n        }\r\n        \r\n    } catch(error) {\r\n        dispatch(setWeatherSearch_ActionCreater([]));\r\n        dispatch(setErrorMessSearch_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n}\r\n","import React from 'react';\r\nimport { geolocationFetch } from '../api/api';\r\nimport { setIsLoading_ActionCreater, setErrorMess_ActionCreater } from './errorMess_reducer';\r\nimport { setWeatherThunk } from './weather_reducer';\r\n\r\nconst SET_CITY = 'SET_CITY';\r\nconst SET_COUNTRY = 'SET_COUNTRY';\r\n\r\nconst initialState = {\r\n    city: \"\",\r\n    country: \"\",\r\n};\r\n\r\nconst geolocation_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CITY:\r\n            return {\r\n                ...state, city: action.payload\r\n            };\r\n        case SET_COUNTRY:\r\n            return {\r\n                ...state, country: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default geolocation_reducer;\r\n\r\n\r\nexport const setCity_ActionCreater = (payload) => ({type: SET_CITY, payload});\r\nexport const setCountry_ActionCreater = (payload) => ({type: SET_COUNTRY, payload});\r\n\r\n\r\nexport const setGeolocationThunk = () => async (dispatch) => {\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n\r\n    try {\r\n\r\n        const response = await geolocationFetch();\r\n\r\n        if (response.data.status === \"success\") {\r\n\r\n           dispatch(setWeatherThunk(response.data.city));\r\n           dispatch(setCity_ActionCreater(response.data.city));\r\n           dispatch(setCountry_ActionCreater(response.data.country));\r\n           dispatch(setErrorMess_ActionCreater(null));\r\n\r\n        } else {\r\n           dispatch(setErrorMess_ActionCreater(response.data.message));\r\n        }\r\n\r\n    } catch(error) {\r\n        dispatch(setErrorMess_ActionCreater(error.response.data.message));\r\n    }\r\n\r\n    dispatch(setIsLoading_ActionCreater());\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Footer_wrapper__34RP-\"};","import React from 'react';\r\n\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\nconst SET_ERROR_MESS = 'SET_ERROR_MESS';\r\nconst SET_ERROR_MESS_SEARCH = 'SET_ERROR_MESS_SEARCH';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: null,\r\n    errorSearch: null,\r\n};\r\n\r\nconst errorMess_reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_IS_LOADING:\r\n            return {\r\n                ...state, isLoading: !state.isLoading\r\n            };\r\n        case SET_ERROR_MESS:\r\n            return {\r\n                ...state, error: action.payload\r\n            };\r\n        case SET_ERROR_MESS_SEARCH:\r\n            return {\r\n                ...state, errorSearch: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default errorMess_reducer;\r\n\r\nexport const setIsLoading_ActionCreater = () => ({type: SET_IS_LOADING});\r\nexport const setErrorMess_ActionCreater = (payload) => ({type: SET_ERROR_MESS, payload});\r\nexport const setErrorMessSearch_ActionCreater = (payload) => ({type: SET_ERROR_MESS_SEARCH, payload});\r\n"],"sourceRoot":""}